<html>
<head>
  <meta charset="UTF-8">
  <title>MoneyTrack - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏</title>
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  <%= stylesheet_link_tag 'loginindex', media: 'all' %>
</head>
<body>
<header class="header">
  <div class="auth-buttons">
    <a class="auth-button profile-btn">–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</a>
    <%= link_to "–í—ã–π—Ç–∏", logout_path, method: :get, class: "auth-button logout-btn" %>
  </div>
  <h1>MoneyTrack</h1>
  <p>–í–∞—à –ª–∏—á–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫</p>
</header>

<section class="finance-section">
  <div class="account-card">
    <h2>–ö–æ–ø–∏–ª–∫–∞</h2>
    <div class="balance">75,000 ‚ÇΩ</div>
    <div class="account-info">
      <p>–¶–µ–ª—å: 100,000 ‚ÇΩ</p>
      <div class="progress-bar">
        <div class="progress"></div>
      </div>
      <p>–ü—Ä–æ–≥—Ä–µ—Å—Å: 75%</p>
    </div>
    <div class="account-info">
      <p>–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –≤–∑–Ω–æ—Å: 5,000 ‚ÇΩ</p>
    </div>
  </div>

  <div class="expense-tracker">
    <h2>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤</h2>
    <div class="expense-form">
      <input type="number" id="expense-amount" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–∞" min="0" step="0.01">
      <input type="text" id="expense-description" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞">
      <button onclick="addExpense()">–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥</button>
    </div>
    <canvas id="expense-chart"></canvas>
  </div>

  <div class="account-card">
    <h2>–û—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç</h2>
    <div class="balance">150,000 ‚ÇΩ</div>
    <div class="account-info">
      <p>–î–æ—Å—Ç—É–ø–Ω–æ: 145,000 ‚ÇΩ</p>
      <p>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: 5,000 ‚ÇΩ</p>
    </div>
    <div class="account-info">
      <p>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:</p>
      <p>–ü—Ä–æ–¥—É–∫—Ç—ã -2,500 ‚ÇΩ</p>
      <p>–ö–∞—Ñ–µ -800 ‚ÇΩ</p>
      <p>–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç -100 ‚ÇΩ</p>
    </div>
  </div>
</section>

<div class="container">
  <div class="card">
    <h2>–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å–æ–≤–µ—Ç—ã</h2>
    <div class="advice-list">
      <% @arr_advices.each do |advice| %>
        <div class="tip">
          <h3>üí° –ü–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç</h3>
          <p><%= advice.content %></p>
        </div>
      <% end %>
    </div>
  </div>

  <div class="card">
    <h2>–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç</h2>
    <div class="currency-item">
      <span>USD/RUB</span>
      <span > <%= $rates[:USD] %> </span>
    </div>
    <div class="currency-item">
      <span>EUR/USD</span>
      <span><%= $rates[:EUR] %></span>
    </div>
    <div class="currency-item">
      <span>CNY/USD</span>
      <span><%= $rates[:CNY] %></span>
    </div>
  </div>

  <div class="card">
    <h2>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–∫—Ü–∏–∏</h2>
    <div class="stock-list">
      <% $stocks.each do |stock| %>
        <div class="stock-item">
          <span><%= stock[:ticker] %></span>
          <span><%= number_to_currency(stock[:price], unit: '$', precision: 2) %></span>
          <% if session[:user_id] %>
            <% if current_user.favorites.exists?(ticker: stock[:ticker]) %>
              <button class="fav-btn active" data-ticker="<%= stock[:ticker] %>">‚òÖ</button>
            <% else %>
              <button class="fav-btn" data-ticker="<%= stock[:ticker] %>">‚òÜ</button>
            <% end %>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<footer class="footer">
  <div class="footer-content">
    <div class="footer-section">
      <h3>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
      <p>üìç –ú–æ—Å–∫–≤–∞, —É–ª. –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è, 123</p>
      <p>üìû 8 (800) 123-45-67</p>
      <p>üìß support@moneytrack.ru</p>
    </div>
    <div class="footer-section">
      <h3>–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</h3>
      <p>–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞: 9:00 - 20:00</p>
      <p>–°—É–±–±–æ—Ç–∞: 10:00 - 17:00</p>
      <p>–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: –≤—ã—Ö–æ–¥–Ω–æ–π</p>
    </div>
    <div class="footer-section">
      <h3>–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</h3>
      <div class="social-links">
        <a href="https://vk.com/moneytrack">VK</a>
        <a href="https://t.me/moneytrack">Telegram</a>
        <a href="https://www.youtube.com/moneytrack">YouTube</a>
      </div>
    </div>
  </div>
  <div class="footer-bottom">
    <p>¬© 2024 MoneyTrack. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
  </div>
</footer>
</body>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const favoriteButtons = document.querySelectorAll('.fav-btn');

        favoriteButtons.forEach(button => {
            button.addEventListener('click', function() {
                const stockTicker = this.dataset.ticker;
                const isActive = this.classList.contains('active');

                toggleFavorite(this, stockTicker, isActive);
            });
        });
    });

    function toggleFavorite(button, stockTicker, isActive) {
        if (!isActive) {
            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
            addFavorite(button, stockTicker);
        } else {
            // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
            removeFavorite(button, stockTicker);
        }
    }

    function addFavorite(button, stockTicker) {
        fetch('/logined', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': getCSRFToken()
            },
            body: JSON.stringify({ ticker: stockTicker })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                    button.classList.add('active');
                    button.textContent = '‚òÖ';
                    showNotification(`${stockTicker} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ`, 'success');
                    updateLocalStorage(stockTicker, 'add');
                } else {
                    // –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                    showNotification(`–û—à–∏–±–∫–∞: ${data.errors.join(', ')}`, 'error');
                    // –û—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
                    button.classList.remove('active');
                    button.textContent = '‚òÜ';
                }
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', error);
                showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.', 'error');
                // –û—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
                button.classList.remove('active');
                button.textContent = '‚òÜ';
            });
    }

    function removeFavorite(button, stockTicker) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º DELETE-–∑–∞–ø—Ä–æ—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º ticker
        const url = `/logined?ticker=${encodeURIComponent(stockTicker)}`;

        fetch(url, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': getCSRFToken()
            }
            // –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è DELETE
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
                    button.classList.remove('active');
                    button.textContent = '‚òÜ';
                    showNotification(`${stockTicker} —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ`, 'info');
                    updateLocalStorage(stockTicker, 'remove');
                } else {
                    // –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
                    showNotification(`–û—à–∏–±–∫–∞: ${data.message}`, 'error');
                    // –û—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
                    button.classList.add('active');
                    button.textContent = '‚òÖ';
                }
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
                showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.', 'error');
                // –û—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
                button.classList.add('active');
                button.textContent = '‚òÖ';
            });
    }

    function getCSRFToken() {
        const tokenElement = document.querySelector('meta[name="csrf-token"]');
        return tokenElement ? tokenElement.getAttribute('content') : '';
    }


    function updateLocalStorage(stockTicker, action) {
        let favorites = JSON.parse(localStorage.getItem('favoriteStocks')) || [];

        if (action === 'add') {
            if (!favorites.includes(stockTicker)) {
                favorites.push(stockTicker);
            }
        } else if (action === 'remove') {
            favorites = favorites.filter(stock => stock !== stockTicker);
        }

        localStorage.setItem('favoriteStocks', JSON.stringify(favorites));
    }


    function showNotification(message) {
        // Check if notification container exists
        let container = document.getElementById('notification-container');
        if (!container) {
            container = document.createElement('div');
            container.id = 'notification-container';
            container.style.cssText = `
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
        `;
            document.body.appendChild(container);
        }

        // Create notification element
        const notification = document.createElement('div');
        notification.style.cssText = `
        background: #2c5530;
        color: white;
        padding: 12px 24px;
        border-radius: 5px;
        margin-top: 10px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        animation: slideIn 0.3s ease-out;
    `;
        notification.textContent = message;

        // Add to container
        container.appendChild(notification);

        // Remove after 3 seconds
        setTimeout(() => {
            notification.style.animation = 'slideOut 0.3s ease-out';
            setTimeout(() => {
                container.removeChild(notification);
            }, 300);
        }, 3000);
    }

</script>

</html>